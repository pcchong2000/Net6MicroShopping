version: '3.4'

services:
  # docker run -d -p 7433:1433 -e SA_PASSWORD=Admin123456 -e ACCEPT_EULA=Y  mcr.microsoft.com/mssql/server:2019-latest
  #sqlserver:
  #  image: mcr.microsoft.com/mssql/server:2019-latest

  mysql:
    image: mysql:latest

  rabbitmq:
    image: rabbitmq:3-management-alpine

  redis:
    image: redis:latest

  zipkin:
    image: openzipkin/zipkin


  shopping.api.order:
    image: ${DOCKER_REGISTRY-}shoppingapiorder
    build:
      context: .
      dockerfile: microservices/Shopping.Api.Order/Dockerfile
  shopping.api.order.dapr:
    image: "daprio/daprd:latest"
    depends_on:
      - shopping.api.order
    network_mode: "service:shopping.api.order"


  shopping.api.pay:
    image: ${DOCKER_REGISTRY-}shoppingapipay
    build:
      context: .
      dockerfile: microservices/Shopping.Api.Pay/Dockerfile
  shopping.api.pay.dapr:
    image: "daprio/daprd:latest"
    depends_on:
      - shopping.api.pay
    network_mode: "service:shopping.api.pay"

  shopping.api.product:
    image: ${DOCKER_REGISTRY-}shoppingapiproduct
    build:
      context: .
      dockerfile: microservices/Shopping.Api.Product/Dockerfile
  shopping.api.product.dapr:
    image: "daprio/daprd:latest"
    depends_on:
      - shopping.api.product
    network_mode: "service:shopping.api.product"

  shopping.api.identitymember:
    image: ${DOCKER_REGISTRY-}shoppingapiidentitymember
    build:
      context: .
      dockerfile: microservices/Shopping.Api.IdentityMember/Dockerfile
  shopping.api.identitymember.dapr:
    image: "daprio/daprd:latest"
    depends_on:
      - shopping.api.identitymember
    network_mode: "service:shopping.api.identitymember"

  shopping.api.identitytenant:
    image: ${DOCKER_REGISTRY-}shoppingapiidentitytenant
    build:
      context: .
      dockerfile: microservices/Shopping.Api.IdentityTenant/Dockerfile
  shopping.api.identitytenant.dapr:
    image: "daprio/daprd:latest"
    depends_on:
      - shopping.api.identitytenant
    network_mode: "service:shopping.api.identitytenant"
  

  shopping.api.oss:
    image: ${DOCKER_REGISTRY-}shoppingapioss
    build:
      context: .
      dockerfile: microservices/Shopping.Api.OSS/Dockerfile


  nginxgateway:
    image: nginxgateway
    build:
      context: .
      dockerfile: gateways/nginxgateway/Dockerfile






